// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using WebApplication8.Data;

#nullable disable

namespace WebApplication8.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20250621194740_n")]
    partial class n
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("WebApplication8.Models.Event", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<int>("MaxParticipants")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("Event");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Date = new DateTime(2025, 6, 19, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "BestEvent description",
                            MaxParticipants = 20,
                            Title = "BestEvent"
                        });
                });

            modelBuilder.Entity("WebApplication8.Models.EventPrelegent", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("EventId")
                        .HasColumnType("int")
                        .HasColumnName("EventId");

                    b.Property<int>("PrelegentId")
                        .HasColumnType("int")
                        .HasColumnName("PrelegentId");

                    b.HasKey("Id");

                    b.HasIndex("EventId");

                    b.HasIndex("PrelegentId");

                    b.ToTable("EventPrelegents");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            EventId = 1,
                            PrelegentId = 1
                        });
                });

            modelBuilder.Entity("WebApplication8.Models.Participant", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Email")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.ToTable("Participant");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Email = "jondoe@gmail.com",
                            FirstName = "John",
                            LastName = "Doe"
                        },
                        new
                        {
                            Id = 2,
                            Email = "2332@gmail.com",
                            FirstName = "Jan",
                            LastName = "Do"
                        });
                });

            modelBuilder.Entity("WebApplication8.Models.Prelegent", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.ToTable("Prelegents");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Email = "johnpork@gmail.com",
                            FirstName = "John",
                            LastName = "Pork"
                        });
                });

            modelBuilder.Entity("WebApplication8.Models.Registration", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("EventId")
                        .HasColumnType("int")
                        .HasColumnName("EventId");

                    b.Property<int>("ParticipantId")
                        .HasColumnType("int")
                        .HasColumnName("ParticipantId");

                    b.HasKey("Id");

                    b.HasIndex("EventId");

                    b.HasIndex("ParticipantId");

                    b.ToTable("Registration");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            EventId = 1,
                            ParticipantId = 1
                        });
                });

            modelBuilder.Entity("WebApplication8.Models.EventPrelegent", b =>
                {
                    b.HasOne("WebApplication8.Models.Event", "Event")
                        .WithMany("EventPrelegent")
                        .HasForeignKey("EventId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WebApplication8.Models.Prelegent", "Prelegent")
                        .WithMany("EventPrelegent")
                        .HasForeignKey("PrelegentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Event");

                    b.Navigation("Prelegent");
                });

            modelBuilder.Entity("WebApplication8.Models.Registration", b =>
                {
                    b.HasOne("WebApplication8.Models.Event", "Event")
                        .WithMany("Registration")
                        .HasForeignKey("EventId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WebApplication8.Models.Participant", "Participant")
                        .WithMany("Registration")
                        .HasForeignKey("ParticipantId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Event");

                    b.Navigation("Participant");
                });

            modelBuilder.Entity("WebApplication8.Models.Event", b =>
                {
                    b.Navigation("EventPrelegent");

                    b.Navigation("Registration");
                });

            modelBuilder.Entity("WebApplication8.Models.Participant", b =>
                {
                    b.Navigation("Registration");
                });

            modelBuilder.Entity("WebApplication8.Models.Prelegent", b =>
                {
                    b.Navigation("EventPrelegent");
                });
#pragma warning restore 612, 618
        }
    }
}
